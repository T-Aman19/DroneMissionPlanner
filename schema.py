from pydantic import BaseModel,Field
from typing import List
class MissionParameters(BaseModel):
    FOV:float
    AOI:dict
    ImageHeight: int
    ImageWidth: int
    Overlap:int
    Altitude:int
    Speed:int
    class Config:
        schema_extra = {
            "example": {
                "FOV": 84,
                "AOI": {
                    "type": "Polygon",
                    "coordinates": [
                        [
                            [77.395034, 28.49966],
                            [77.395077, 28.494889],
                            [77.401257, 28.495247],
                            [77.401085, 28.498302],
                            [77.395034, 28.49966]
                        ]
                    ]
                },
                "ImageHeight": 6000,
                "ImageWidth": 8000,
                "Overlap": 80,
                "Altitude": 100,
                "Speed": 15
            }
        }

class Geometry(BaseModel):
    type:str= "LineString"
    coordinates:List

    class Config: 
        schema_extra = {
            "example": {
    "type": "LineString",
    "coordinates": [
      [
        77.395034,
        28.49966
      ],
      [
        77.401085,
        28.498302
      ],
      [
        77.40102193410102,
        28.498020989871378
      ],
      [
        77.39503666563927,
        28.499364238023926
      ],
      [
        77.39503933127854,
        28.499068476047853
      ],
      [
        77.40095886820205,
        28.497739979742757
      ],
      [
        77.40089580230308,
        28.49745896961414
      ],
      [
        77.39504199691781,
        28.498772714071784
      ],
      [
        77.39504466255708,
        28.498476952095707
      ],
      [
        77.40083273640411,
        28.49717795948552
      ],
      [
        77.40076967050514,
        28.4968969493569
      ],
      [
        77.39504732819636,
        28.498181190119634
      ],
      [
        77.39504999383564,
        28.49788542814356
      ],
      [
        77.40070660460617,
        28.496615939228278
      ],
      [
        77.4006435387072,
        28.496334929099657
      ],
      [
        77.39505265947491,
        28.49758966616749
      ],
      [
        77.39505532511419,
        28.497293904191416
      ],
      [
        77.40058047280823,
        28.496053918971036
      ],
      [
        77.40051740690927,
        28.49577290884242
      ],
      [
        77.39505799075346,
        28.49699814221535
      ],
      [
        77.39506065639273,
        28.496702380239277
      ],
      [
        77.4004543410103,
        28.495491898713798
      ],
      [
        77.40039127511133,
        28.495210888585177
      ],
      [
        77.395063322032,
        28.4964066182632
      ],
      [
        77.39506598767127,
        28.496110856287128
      ],
      [
        77.39939563052464,
        28.495139173095115
      ],
      [
        77.39835026478781,
        28.495078616309716
      ],
      [
        77.39506865331055,
        28.495815094311055
      ],
      [
        77.39507131894982,
        28.495519332334982
      ],
      [
        77.39730489905098,
        28.495018059524313
      ],
      [
        77.39625953331415,
        28.49495750273891
      ],
      [
        77.39507398458909,
        28.495223570358913
      ],
      [
        77.39507665022836,
        28.49492780838284
      ],
      [
        77.39521416757732,
        28.49489694595351
      ]
    ]
  }
        }

class MissionResponse(BaseModel):
    type: str= "Feature"
    time_interval:int
    properties:dict= {}
    geometry: Geometry